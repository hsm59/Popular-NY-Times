plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'jacoco'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['prodDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/prodDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "com.hussainm.popularnytimes"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }


    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        prod {
            dimension "default"
            buildConfigField 'String', 'API_KEY', '""'
            buildConfigField 'String', 'BASE_URL', '"https://api.nytimes.com/svc/"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Navigation Components and KTX Dependency
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit and Logging Interceptor
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def logger_version = "4.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$logger_version"

    // Dagger
    def dagger_version = "2.35.1"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger:$dagger_version"

    // Kotlin Coroutines
    def coroutines_version = "1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Lifecycle - LiveData - ViewModel - Fragment KTX
    def extension_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$extension_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$extension_version"

    implementation 'androidx.fragment:fragment-ktx:1.3.5'

    // Density Pixels
    def dp_version = "1.0.6"
    implementation "com.intuit.sdp:sdp-android:$dp_version"
    implementation "com.intuit.ssp:ssp-android:$dp_version"

    // Timber for Logging
    def timber_version = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Coil for Image loading
    implementation("io.coil-kt:coil:1.2.2")

    // Dependencies for testing
    def mock_server_version = "4.3.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_server_version"
    def coroutines_test_version = "1.2.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    def android_core_testing = "2.1.0"
    testImplementation "androidx.arch.core:core-testing:$android_core_testing"
}